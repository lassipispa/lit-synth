{"version":3,"file":"SynthKey.js","sourceRoot":"","sources":["../../../src/ui/keyboard/SynthKey.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AACnE,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AACnD,OAAO,EAAE,eAAe,EAAE,MAAM,iCAAiC,CAAC;AAElE,MAAM,EAAE,YAAY,EAAE,eAAe,EAAE,GAAG,eAAe,CAAC,QAAQ,EAAE,CAAC;AAGrE,IAAM,QAAQ,GAAd,MAAM,QAAS,SAAQ,UAAU;IAAjC;;QACqB,SAAI,GAAG,KAAK,CAAC;QAEb,QAAG,GAAG,GAAG,CAAC;QAEZ,UAAK,GAAG,MAAM,CAAC;QAUhC,aAAQ,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC;YACpB,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QACxC,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;YACtB,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAC3C,CAAC,CAAC;QAEF,cAAS,GAAG,CAAC,KAAoB,EAAE,EAAE;YACnC,IAAI,KAAK,CAAC,MAAM;gBAAE,OAAO;YACzB,IAAI,KAAK,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG;gBAAE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAC9C,CAAC,CAAC;QAEF,YAAO,GAAG,CAAC,KAAoB,EAAE,EAAE;YACjC,IAAI,KAAK,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG;gBAAE,IAAI,CAAC,SAAS,EAAE,CAAC;QAC/C,CAAC,CAAC;IAUJ,CAAC;IAjCU,iBAAiB;QACxB,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC5D,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;IAC1D,CAAC;IAqBQ,MAAM;QACb,OAAO,IAAI,CAAA;oBACK,IAAI,CAAC,QAAQ;kBACf,IAAI,CAAC,SAAS;;QAExB,IAAI,CAAC,KAAK;cACJ,CAAC;IACb,CAAC;CACF,CAAA;AAnCiB,eAAM,GAAG,cAAe,CAAA;AAN5B;IAAX,QAAQ,EAAE;sCAAqB;AAEpB;IAAX,QAAQ,EAAE;qCAAkB;AAEpB;IAAR,KAAK,EAAE;uCAAwB;AAL5B,QAAQ;IADb,aAAa,CAAC,WAAW,CAAC;GACrB,QAAQ,CA0Cb;AAED,OAAO,EAAE,QAAQ,EAAE,CAAC","sourcesContent":["import { html, LitElement } from \"lit\";\r\nimport { customElement, property, state } from \"lit/decorators.js\";\r\nimport { synthKeyStyles } from \"./SynthKey.styles\";\r\nimport { oscillatorStore } from \"../../stores/OscillatorStore.js\";\r\n\r\nconst { addFrequency, removeFrequency } = oscillatorStore.getState();\r\n\r\n@customElement(\"synth-key\")\r\nclass SynthKey extends LitElement {\r\n  @property() public freq = \"440\";\r\n\r\n  @property() public key = \"a\";\r\n\r\n  @state() private _test = \"Test\";\r\n\r\n  static override styles = synthKeyStyles;\r\n\r\n  override connectedCallback() {\r\n    super.connectedCallback();\r\n    document.addEventListener(\"keydown\", this.onKeyDown, false);\r\n    document.addEventListener(\"keyup\", this.onKeyUp, false);\r\n  }\r\n\r\n  openGate = () => {\r\n    this._test = \"Auki\";\r\n    addFrequency(parseInt(this.freq, 10));\r\n  };\r\n\r\n  closeGate = () => {\r\n    this._test = \"Kiinni\";\r\n    removeFrequency(parseInt(this.freq, 10));\r\n  };\r\n\r\n  onKeyDown = (event: KeyboardEvent) => {\r\n    if (event.repeat) return;\r\n    if (event.key === this.key) this.openGate();\r\n  };\r\n\r\n  onKeyUp = (event: KeyboardEvent) => {\r\n    if (event.key === this.key) this.closeGate();\r\n  };\r\n\r\n  override render() {\r\n    return html`<button\r\n      @mousedown=\"${this.openGate}\"\r\n      @mouseup=\"${this.closeGate}\"\r\n    >\r\n      ${this._test}\r\n    </button>`;\r\n  }\r\n}\r\n\r\nexport { SynthKey };\r\n"]}